
package collaborateur.web.service.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CollaborateurService", targetNamespace = "http://services.model.service.web.collaborateur/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CollaborateurService {


    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.CountResponse")
    @Action(input = "http://services.model.service.web.collaborateur/CollaborateurService/countRequest", output = "http://services.model.service.web.collaborateur/CollaborateurService/countResponse")
    public int count();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws CollaborateurInconnuException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.DeleteResponse")
    @Action(input = "http://services.model.service.web.collaborateur/CollaborateurService/deleteRequest", output = "http://services.model.service.web.collaborateur/CollaborateurService/deleteResponse", fault = {
        @FaultAction(className = CollaborateurInconnuException_Exception.class, value = "http://services.model.service.web.collaborateur/CollaborateurService/delete/Fault/CollaborateurInconnuException")
    })
    public boolean delete(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws CollaborateurInconnuException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns collaborateur.web.service.client.Collaborateur
     * @throws CollaborateurExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCollaborateur", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.AddCollaborateur")
    @ResponseWrapper(localName = "addCollaborateurResponse", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.AddCollaborateurResponse")
    @Action(input = "http://services.model.service.web.collaborateur/CollaborateurService/addCollaborateurRequest", output = "http://services.model.service.web.collaborateur/CollaborateurService/addCollaborateurResponse", fault = {
        @FaultAction(className = CollaborateurExistException_Exception.class, value = "http://services.model.service.web.collaborateur/CollaborateurService/addCollaborateur/Fault/CollaborateurExistException")
    })
    public Collaborateur addCollaborateur(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws CollaborateurExistException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<collaborateur.web.service.client.Collaborateur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCollaborateurs", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.GetCollaborateurs")
    @ResponseWrapper(localName = "getCollaborateursResponse", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.GetCollaborateursResponse")
    @Action(input = "http://services.model.service.web.collaborateur/CollaborateurService/getCollaborateursRequest", output = "http://services.model.service.web.collaborateur/CollaborateurService/getCollaborateursResponse")
    public List<Collaborateur> getCollaborateurs();

    /**
     * 
     * @param arg0
     * @return
     *     returns collaborateur.web.service.client.Collaborateur
     * @throws CollaborateurInconnuException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCollaborateur", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.GetCollaborateur")
    @ResponseWrapper(localName = "getCollaborateurResponse", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.GetCollaborateurResponse")
    @Action(input = "http://services.model.service.web.collaborateur/CollaborateurService/getCollaborateurRequest", output = "http://services.model.service.web.collaborateur/CollaborateurService/getCollaborateurResponse", fault = {
        @FaultAction(className = CollaborateurInconnuException_Exception.class, value = "http://services.model.service.web.collaborateur/CollaborateurService/getCollaborateur/Fault/CollaborateurInconnuException")
    })
    public Collaborateur getCollaborateur(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws CollaborateurInconnuException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns collaborateur.web.service.client.Collaborateur
     * @throws CollaborateurInconnuException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateCollaborateur", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.UpdateCollaborateur")
    @ResponseWrapper(localName = "updateCollaborateurResponse", targetNamespace = "http://services.model.service.web.collaborateur/", className = "collaborateur.web.service.client.UpdateCollaborateurResponse")
    @Action(input = "http://services.model.service.web.collaborateur/CollaborateurService/updateCollaborateurRequest", output = "http://services.model.service.web.collaborateur/CollaborateurService/updateCollaborateurResponse", fault = {
        @FaultAction(className = CollaborateurInconnuException_Exception.class, value = "http://services.model.service.web.collaborateur/CollaborateurService/updateCollaborateur/Fault/CollaborateurInconnuException")
    })
    public Collaborateur updateCollaborateur(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws CollaborateurInconnuException_Exception
    ;

}
